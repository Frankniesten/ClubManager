{% extends 'base_content_full_width.html.twig' %}

{% block body %}

    {{ form_start(form) }}

    <!-- Page header -->
    <div class="d-flex justify-content-between flex-row">
        <div class="p-2">
            {% if 'create' in app.request.uri  %}
                <h3>{% trans %}Parents_add{% endtrans %}</h3>
            {% endif %}
            {% if 'edit' in app.request.uri  %}
                <h3>{% trans %}Parents_edit{% endtrans %}</h3>
            {% endif %}
        </div>

        <div class="p-2">
            <div class="btn-group float-right">
                <button type="submit" class="btn btn-primary btn-sm"><i class="mdi mdi-content-save"></i> {% trans %}Save{% endtrans %}</button>
                <a href="{{ path('person_id', {'id': id}) }}#parents" class="btn btn-primary btn-sm"><i class="mdi mdi-close"></i> {% trans %}Close{% endtrans %}</a>
            </div>
        </div>
    </div>
    <!-- End Page header -->

    <!-- Content -->
    <div class="card">
        <div class="card-body">

            <div class="row">
                <div class="col">
                    {{ form_row(form.parents, {'id': 'my_multi_select1', 'attr': {'class': 'multi-select', 'data-plugin': 'multi-select', multiple: 'multiple'}}) }}
                </div>
            </div>

            {{ form_end(form) }}
        </div>
    </div>
    <!-- End Content -->

{% endblock %}


{% block javascripts %}

	{{ parent() }}

    <script type="text/javascript">
        jQuery(document).ready(function() {

        //advance multiselect start
        $('#my_multi_select1').multiSelect({
            selectableHeader: "<input type='text' class='form-control search-input' autocomplete='off' placeholder='search...'>",
            selectionHeader: "<input type='text' class='form-control search-input' autocomplete='off' placeholder='search...'>",
            afterInit: function (ms) {
                var that = this,
                        $selectableSearch = that.$selectableUl.prev(),
                        $selectionSearch = that.$selectionUl.prev(),
                        selectableSearchString = '#' + that.$container.attr('id') + ' .ms-elem-selectable:not(.ms-selected)',
                        selectionSearchString = '#' + that.$container.attr('id') + ' .ms-elem-selection.ms-selected';

                that.qs1 = $selectableSearch.quicksearch(selectableSearchString)
                        .on('keydown', function (e) {
                            if (e.which === 40) {
                                that.$selectableUl.focus();
                                return false;
                            }
                        });

                that.qs2 = $selectionSearch.quicksearch(selectionSearchString)
                        .on('keydown', function (e) {
                            if (e.which == 40) {
                                that.$selectionUl.focus();
                                return false;
                            }
                        });
                },
                afterSelect: function () {
                    this.qs1.cache();
                    this.qs2.cache();
                },
                afterDeselect: function () {
                    this.qs1.cache();
                    this.qs2.cache();
                }
            });
        });
    </script>
    
{% endblock %}


